[{"E:\\Web Development\\MERN stack\\Coders House\\frontend\\src\\index.js":"1","E:\\Web Development\\MERN stack\\Coders House\\frontend\\src\\store\\index.js":"2","E:\\Web Development\\MERN stack\\Coders House\\frontend\\src\\App.js":"3","E:\\Web Development\\MERN stack\\Coders House\\frontend\\src\\store\\authSlice.js":"4","E:\\Web Development\\MERN stack\\Coders House\\frontend\\src\\store\\activateSlice.js":"5","E:\\Web Development\\MERN stack\\Coders House\\frontend\\src\\hooks\\useLoadingWithRefresh.js":"6","E:\\Web Development\\MERN stack\\Coders House\\frontend\\src\\pages\\Authenticate\\Authenticate.jsx":"7","E:\\Web Development\\MERN stack\\Coders House\\frontend\\src\\pages\\Room\\Room.jsx":"8","E:\\Web Development\\MERN stack\\Coders House\\frontend\\src\\pages\\Home\\Home.jsx":"9","E:\\Web Development\\MERN stack\\Coders House\\frontend\\src\\pages\\Activate\\Activate.jsx":"10","E:\\Web Development\\MERN stack\\Coders House\\frontend\\src\\pages\\Rooms\\Rooms.jsx":"11","E:\\Web Development\\MERN stack\\Coders House\\frontend\\src\\components\\shared\\Loader\\Loader.jsx":"12","E:\\Web Development\\MERN stack\\Coders House\\frontend\\src\\components\\shared\\Navigation\\Navigation.jsx":"13","E:\\Web Development\\MERN stack\\Coders House\\frontend\\src\\hooks\\useWebRTC.js":"14","E:\\Web Development\\MERN stack\\Coders House\\frontend\\src\\http\\index.js":"15","E:\\Web Development\\MERN stack\\Coders House\\frontend\\src\\components\\shared\\Button\\Button.jsx":"16","E:\\Web Development\\MERN stack\\Coders House\\frontend\\src\\components\\AddRoomModal\\AddRoomModal.jsx":"17","E:\\Web Development\\MERN stack\\Coders House\\frontend\\src\\components\\RoomCard\\RoomCard.jsx":"18","E:\\Web Development\\MERN stack\\Coders House\\frontend\\src\\pages\\Steps\\StepName\\StepName.jsx":"19","E:\\Web Development\\MERN stack\\Coders House\\frontend\\src\\pages\\Steps\\StepOtp\\StepOtp.jsx":"20","E:\\Web Development\\MERN stack\\Coders House\\frontend\\src\\components\\shared\\Card\\Card.jsx":"21","E:\\Web Development\\MERN stack\\Coders House\\frontend\\src\\pages\\Steps\\StepPhoneEmail\\StepPhoneEmail.jsx":"22","E:\\Web Development\\MERN stack\\Coders House\\frontend\\src\\pages\\Steps\\StepAvatar\\StepAvatar.jsx":"23","E:\\Web Development\\MERN stack\\Coders House\\frontend\\src\\actions.js":"24","E:\\Web Development\\MERN stack\\Coders House\\frontend\\src\\hooks\\useStateWithCallback.js":"25","E:\\Web Development\\MERN stack\\Coders House\\frontend\\src\\socket\\index.js":"26","E:\\Web Development\\MERN stack\\Coders House\\frontend\\src\\components\\shared\\TextInput\\TextInput.jsx":"27","E:\\Web Development\\MERN stack\\Coders House\\frontend\\src\\pages\\Steps\\StepPhoneEmail\\Phone\\Phone.jsx":"28","E:\\Web Development\\MERN stack\\Coders House\\frontend\\src\\pages\\Steps\\StepPhoneEmail\\Email\\Email.jsx":"29","E:\\Web Development\\MERN stack\\Coders House\\frontend\\src\\pages\\Profile\\Profile.jsx":"30"},{"size":330,"mtime":1646111503613,"results":"31","hashOfConfig":"32"},{"size":218,"mtime":1643622483768,"results":"33","hashOfConfig":"32"},{"size":3070,"mtime":1646496433807,"results":"34","hashOfConfig":"32"},{"size":729,"mtime":1643622488653,"results":"35","hashOfConfig":"32"},{"size":484,"mtime":1643622492139,"results":"36","hashOfConfig":"32"},{"size":729,"mtime":1643622694462,"results":"37","hashOfConfig":"32"},{"size":448,"mtime":1643622512903,"results":"38","hashOfConfig":"32"},{"size":3515,"mtime":1646056324734,"results":"39","hashOfConfig":"32"},{"size":925,"mtime":1643914745940,"results":"40","hashOfConfig":"32"},{"size":491,"mtime":1643622507916,"results":"41","hashOfConfig":"32"},{"size":3589,"mtime":1643622537134,"results":"42","hashOfConfig":"32"},{"size":766,"mtime":1643622808210,"results":"43","hashOfConfig":"32"},{"size":1622,"mtime":1646487698546,"results":"44","hashOfConfig":"32"},{"size":7374,"mtime":1646058202017,"results":"45","hashOfConfig":"32"},{"size":1362,"mtime":1643622687954,"results":"46","hashOfConfig":"32"},{"size":388,"mtime":1643622749973,"results":"47","hashOfConfig":"32"},{"size":2709,"mtime":1643622714724,"results":"48","hashOfConfig":"32"},{"size":1263,"mtime":1643622727382,"results":"49","hashOfConfig":"32"},{"size":1082,"mtime":1643622560099,"results":"50","hashOfConfig":"32"},{"size":1395,"mtime":1643720125452,"results":"51","hashOfConfig":"32"},{"size":426,"mtime":1643622800480,"results":"52","hashOfConfig":"32"},{"size":1221,"mtime":1643622596138,"results":"53","hashOfConfig":"32"},{"size":2378,"mtime":1643622548258,"results":"54","hashOfConfig":"32"},{"size":267,"mtime":1646058247580,"results":"55","hashOfConfig":"32"},{"size":574,"mtime":1643622697951,"results":"56","hashOfConfig":"32"},{"size":317,"mtime":1646112104279,"results":"57","hashOfConfig":"32"},{"size":412,"mtime":1643720127688,"results":"58","hashOfConfig":"32"},{"size":1407,"mtime":1646284186603,"results":"59","hashOfConfig":"32"},{"size":724,"mtime":1643622582105,"results":"60","hashOfConfig":"32"},{"size":1390,"mtime":1646493003311,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"155t3wq",{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"64"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92","usedDeprecatedRules":"64"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"E:\\Web Development\\MERN stack\\Coders House\\frontend\\src\\index.js",[],["125","126"],"E:\\Web Development\\MERN stack\\Coders House\\frontend\\src\\store\\index.js",[],"E:\\Web Development\\MERN stack\\Coders House\\frontend\\src\\App.js",[],"E:\\Web Development\\MERN stack\\Coders House\\frontend\\src\\store\\authSlice.js",[],"E:\\Web Development\\MERN stack\\Coders House\\frontend\\src\\store\\activateSlice.js",[],"E:\\Web Development\\MERN stack\\Coders House\\frontend\\src\\hooks\\useLoadingWithRefresh.js",[],"E:\\Web Development\\MERN stack\\Coders House\\frontend\\src\\pages\\Authenticate\\Authenticate.jsx",[],"E:\\Web Development\\MERN stack\\Coders House\\frontend\\src\\pages\\Room\\Room.jsx",["127"],"import React, { useState, useEffect } from \"react\";\r\nimport { useWebRTC } from \"../../hooks/useWebRTC\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nimport styles from \"./Room.module.css\";\r\nimport { getRoom } from \"../../http\";\r\n\r\nconst Room = () => {\r\n  const { id: roomId } = useParams();\r\n  const user = useSelector((state) => state.auth.user);\r\n  const { clients, provideRef, handleMute } = useWebRTC(roomId, user);\r\n  const history = useHistory();\r\n  const [room, setRoom] = useState(null);\r\n  const [isMute, setMute] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchRoom = async () => {\r\n      const { data } = await getRoom(roomId);\r\n      setRoom((prev) => data);\r\n    };\r\n    fetchRoom();\r\n  }, [roomId]);\r\n\r\n  useEffect(() => {\r\n    handleMute(isMute, user.id);\r\n  }, [isMute]);\r\n\r\n  const handleManualLeave = () => {\r\n    history.push(\"/rooms\");\r\n  };\r\n\r\n  const handleMuteClick = (clientId) => {\r\n    if (clientId !== user.id) return;\r\n    setMute((isMute) => !isMute);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"container\">\r\n        <button onClick={handleManualLeave} className={styles.goBack}>\r\n          <img src=\"/images/arrow-left.png\" alt=\"arrow-left\" />\r\n          <span>All voice rooms</span>\r\n        </button>\r\n      </div>\r\n      <div className={styles.clientsWrap}>\r\n        <div className={styles.header}>\r\n          <h2 className={styles.topic}>{room?.topic}</h2>\r\n          <div className={styles.actions}>\r\n            <button className={styles.actionBtn}>\r\n              <img src=\"/images/palm.png\" alt=\"palm-icon\" />\r\n            </button>\r\n            <button onClick={handleManualLeave} className={styles.actionBtn}>\r\n              <img src=\"/images/win.png\" alt=\"win-icon\" />\r\n              <span>Leave quietly</span>\r\n            </button>\r\n          </div>\r\n        </div>\r\n        <div className={styles.clientsList}>\r\n          {clients.map((client) => {\r\n            return (\r\n              <div className={styles.client} key={client.id}>\r\n                <div className={`${!client.muted && styles.glow}`}>\r\n                  <div className={styles.userHead}>\r\n                    <audio\r\n                      ref={(instance) => provideRef(instance, client.id)}\r\n                      //controls\r\n                      autoPlay\r\n                    ></audio>\r\n                    <img\r\n                      className={styles.userAvatar}\r\n                      src={client.avatar}\r\n                      alt=\"avatar\"\r\n                    />\r\n                    {/* <video className={styles.userAvatar}\r\n                      ref={(instance) => provideRef(instance, client.id)}\r\n                      //controls\r\n                      autoPlay\r\n                    ></video> */}\r\n                    <button\r\n                      onClick={() => {\r\n                        handleMuteClick(client.id);\r\n                      }}\r\n                      className={styles.micBtn}\r\n                    >\r\n                      {client.muted ? (\r\n                        <img src=\"/images/mic-mute.png\" alt=\"mic-mute-icon\" />\r\n                      ) : (\r\n                        <img src=\"/images/mic.png\" alt=\"mic-icon\" />\r\n                      )}\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n                <h4>{client.name}</h4>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Room;\r\n","E:\\Web Development\\MERN stack\\Coders House\\frontend\\src\\pages\\Home\\Home.jsx",[],"E:\\Web Development\\MERN stack\\Coders House\\frontend\\src\\pages\\Activate\\Activate.jsx",[],"E:\\Web Development\\MERN stack\\Coders House\\frontend\\src\\pages\\Rooms\\Rooms.jsx",[],"E:\\Web Development\\MERN stack\\Coders House\\frontend\\src\\components\\shared\\Loader\\Loader.jsx",[],"E:\\Web Development\\MERN stack\\Coders House\\frontend\\src\\components\\shared\\Navigation\\Navigation.jsx",[],"E:\\Web Development\\MERN stack\\Coders House\\frontend\\src\\hooks\\useWebRTC.js",["128","129","130","131"],"import { useCallback, useEffect, useRef } from \"react\";\r\nimport { useStateWithCallback } from \"../hooks/useStateWithCallback\";\r\nimport socketInit from \"../socket\";\r\nimport { ACTIONS } from \"../actions\";\r\nimport freeice from \"freeice\";\r\n\r\n// const user = [\r\n//   {\r\n//     id: 1,\r\n//     name: \"Praveen\",\r\n//   },\r\n//   {\r\n//     id: 2,\r\n//     name: \"Ayush\",\r\n//   },\r\n// ];\r\n\r\nexport const useWebRTC = (roomId, user) => {\r\n  const [clients, setClients] = useStateWithCallback([]);\r\n  const audioElements = useRef({});\r\n  const connections = useRef({});\r\n  const localMediaStream = useRef(null);\r\n  const socket = useRef(null);\r\n  const clientsRef = useRef([]);\r\n\r\n  useEffect(() => {\r\n    socket.current = socketInit();\r\n  }, []);\r\n\r\n  const addNewClient = useCallback(\r\n    (newClient, cb) => {\r\n      const lookingFor = clients.find((client) => client.id === newClient.id);\r\n\r\n      if (lookingFor === undefined) {\r\n        setClients((existingClients) => [...existingClients, newClient], cb);\r\n      }\r\n    },\r\n    [clients, setClients]\r\n  );\r\n\r\n  // Capture media\r\n  useEffect(() => {\r\n    const startCapture = async () => {\r\n      localMediaStream.current = await navigator.mediaDevices.getUserMedia({\r\n        audio: true,\r\n        // video: true,\r\n      });\r\n    };\r\n\r\n    startCapture().then(() => {\r\n      addNewClient({ ...user, muted: true }, () => {\r\n        const localElement = audioElements.current[user.id];\r\n        if (localElement) {\r\n          localElement.volume = 0;\r\n          localElement.srcObject = localMediaStream.current;\r\n        }\r\n\r\n        // socket emit JOIN socket io\r\n        socket.current.emit(ACTIONS.JOIN, { roomId, user });\r\n      });\r\n    });\r\n\r\n    return () => {\r\n      // Leaving the room\r\n      localMediaStream.current.getTracks().forEach((track) => track.stop());\r\n      socket.current.emit(ACTIONS.LEAVE, { roomId });\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const handleNewPeer = async ({ peerId, createOffer, user: remoteUser }) => {\r\n      // if already connected then give warning\r\n      if (peerId in connections.current) {\r\n        return console.warn(\r\n          `You are already connected with ${peerId} (${user.name})`\r\n        );\r\n      }\r\n\r\n      connections.current[peerId] = new RTCPeerConnection({\r\n        iceServers: freeice(),\r\n      });\r\n\r\n      // Handle new ice candidate\r\n      connections.current[peerId].onicecandidate = (event) => {\r\n        socket.current.emit(ACTIONS.RELAY_ICE, {\r\n          peerId,\r\n          icecandidate: event.candidate,\r\n        });\r\n      };\r\n\r\n      // Handle on track on this connection\r\n      connections.current[peerId].ontrack = ({ streams: [remoteStream] }) => {\r\n        addNewClient({ ...remoteUser, muted: true }, () => {\r\n          if (audioElements.current[remoteUser.id]) {\r\n            audioElements.current[remoteUser.id].srcObject = remoteStream;\r\n          } else {\r\n            let settled = false;\r\n            const interval = setInterval(() => {\r\n              if (audioElements.current[remoteUser.id]) {\r\n                audioElements.current[remoteUser.id].srcObject = remoteStream;\r\n                settled = true;\r\n              }\r\n              if (settled) {\r\n                clearInterval(interval);\r\n              }\r\n            }, 1000);\r\n          }\r\n        });\r\n      };\r\n\r\n      // Add local track to remote connections\r\n      localMediaStream.current.getTracks().forEach((track) => {\r\n        connections.current[peerId].addTrack(track, localMediaStream.current);\r\n      });\r\n\r\n      // Create offer\r\n      if (createOffer) {\r\n        const offer = await connections.current[peerId].createOffer();\r\n\r\n        await connections.current[peerId].setLocalDescription(offer);\r\n\r\n        // send offer to another client\r\n        socket.current.emit(ACTIONS.RELAY_SDP, {\r\n          peerId,\r\n          sessionDescription: offer,\r\n        });\r\n      }\r\n    };\r\n\r\n    socket.current.on(ACTIONS.ADD_PEER, handleNewPeer);\r\n\r\n    return () => {\r\n      socket.current.off(ACTIONS.ADD_PEER);\r\n    };\r\n  }, []);\r\n\r\n  // Handle ice candidate\r\n  useEffect(() => {\r\n    socket.current.on(ACTIONS.ICE_CANDIDATE, ({ peerId, icecandidate }) => {\r\n      if (icecandidate) {\r\n        connections.current[peerId].addIceCandidate(icecandidate);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      socket.current.off(ACTIONS.ICE_CANDIDATE);\r\n    };\r\n  }, []);\r\n\r\n  // Handle SDP\r\n  useEffect(() => {\r\n    const handleRemoteSdp = async ({\r\n      peerId,\r\n      sessionDescription: remoteSessionDescription,\r\n    }) => {\r\n      connections.current[peerId].setRemoteDescription(\r\n        new RTCSessionDescription(remoteSessionDescription)\r\n      );\r\n\r\n      // if session description is type of offer then create an answer\r\n      if (remoteSessionDescription.type === \"offer\") {\r\n        const connection = connections.current[peerId];\r\n        const answer = await connection.createAnswer();\r\n\r\n        connection.setLocalDescription(answer);\r\n\r\n        socket.current.emit(ACTIONS.RELAY_SDP, {\r\n          peerId,\r\n          sessionDescription: answer,\r\n        });\r\n      }\r\n    };\r\n    socket.current.on(ACTIONS.SESSION_DESCRIPTION, handleRemoteSdp);\r\n\r\n    return () => {\r\n      socket.current.off(ACTIONS.SESSION_DESCRIPTION);\r\n    };\r\n  }, []);\r\n\r\n  // Handle remove peer\r\n  useEffect(() => {\r\n    const handleRemovePeer = async ({ peerId, userId }) => {\r\n      if (connections.current[peerId]) {\r\n        connections.current[peerId].close();\r\n      }\r\n\r\n      delete connections.current[peerId];\r\n      delete audioElements.current[peerId];\r\n      setClients((list) => list.filter((client) => client.id !== userId));\r\n    };\r\n\r\n    socket.current.on(ACTIONS.REMOVE_PEER, handleRemovePeer);\r\n\r\n    return () => {\r\n      socket.current.off(ACTIONS.REMOVE_PEER);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    clientsRef.current = clients;\r\n  }, [clients]);\r\n\r\n  //Listen for mute/unmute\r\n  useEffect(() => {\r\n    socket.current.on(ACTIONS.MUTE, ({ peerId, userId }) => {\r\n      setMute(true, userId);\r\n    });\r\n    socket.current.on(ACTIONS.UN_MUTE, ({ peerId, userId }) => {\r\n      setMute(false, userId);\r\n    });\r\n    const setMute = (mute, userId) => {\r\n      const clientIdx = clientsRef.current\r\n        .map((client) => client.id)\r\n        .indexOf(userId);\r\n      const connectedClients = JSON.parse(JSON.stringify(clientsRef.current));\r\n      if (clientIdx > -1) {\r\n        connectedClients[clientIdx].muted = mute;\r\n        setClients(connectedClients);\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  // Handling mute\r\n  const handleMute = (isMute, userId) => {\r\n    let settled = false;\r\n    if (userId === user.id) {\r\n      let interval = setInterval(() => {\r\n        if (localMediaStream.current) {\r\n          localMediaStream.current.getTracks()[0].enabled = !isMute;\r\n          if (isMute) {\r\n            socket.current.emit(ACTIONS.MUTE, {\r\n              roomId,\r\n              userId: user.id,\r\n            });\r\n          } else {\r\n            socket.current.emit(ACTIONS.UN_MUTE, {\r\n              roomId,\r\n              userId: user.id,\r\n            });\r\n          }\r\n          settled = true;\r\n        }\r\n        if (settled) {\r\n          clearInterval(interval);\r\n        }\r\n      }, 200);\r\n    }\r\n  };\r\n\r\n  const provideRef = (instance, userId) => {\r\n    audioElements.current[userId] = instance;\r\n  };\r\n\r\n  return { clients, provideRef, handleMute };\r\n};\r\n","E:\\Web Development\\MERN stack\\Coders House\\frontend\\src\\http\\index.js",[],"E:\\Web Development\\MERN stack\\Coders House\\frontend\\src\\components\\shared\\Button\\Button.jsx",[],"E:\\Web Development\\MERN stack\\Coders House\\frontend\\src\\components\\AddRoomModal\\AddRoomModal.jsx",[],"E:\\Web Development\\MERN stack\\Coders House\\frontend\\src\\components\\RoomCard\\RoomCard.jsx",[],"E:\\Web Development\\MERN stack\\Coders House\\frontend\\src\\pages\\Steps\\StepName\\StepName.jsx",[],"E:\\Web Development\\MERN stack\\Coders House\\frontend\\src\\pages\\Steps\\StepOtp\\StepOtp.jsx",[],"E:\\Web Development\\MERN stack\\Coders House\\frontend\\src\\components\\shared\\Card\\Card.jsx",[],"E:\\Web Development\\MERN stack\\Coders House\\frontend\\src\\pages\\Steps\\StepPhoneEmail\\StepPhoneEmail.jsx",[],"E:\\Web Development\\MERN stack\\Coders House\\frontend\\src\\pages\\Steps\\StepAvatar\\StepAvatar.jsx",[],"E:\\Web Development\\MERN stack\\Coders House\\frontend\\src\\actions.js",[],"E:\\Web Development\\MERN stack\\Coders House\\frontend\\src\\hooks\\useStateWithCallback.js",[],"E:\\Web Development\\MERN stack\\Coders House\\frontend\\src\\socket\\index.js",[],"E:\\Web Development\\MERN stack\\Coders House\\frontend\\src\\components\\shared\\TextInput\\TextInput.jsx",[],"E:\\Web Development\\MERN stack\\Coders House\\frontend\\src\\pages\\Steps\\StepPhoneEmail\\Phone\\Phone.jsx",[],"E:\\Web Development\\MERN stack\\Coders House\\frontend\\src\\pages\\Steps\\StepPhoneEmail\\Email\\Email.jsx",[],"E:\\Web Development\\MERN stack\\Coders House\\frontend\\src\\pages\\Profile\\Profile.jsx",[],{"ruleId":"132","replacedBy":"133"},{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","severity":1,"message":"137","line":26,"column":6,"nodeType":"138","endLine":26,"endColumn":14,"suggestions":"139"},{"ruleId":"136","severity":1,"message":"140","line":68,"column":6,"nodeType":"138","endLine":68,"endColumn":8,"suggestions":"141"},{"ruleId":"136","severity":1,"message":"142","line":135,"column":6,"nodeType":"138","endLine":135,"endColumn":8,"suggestions":"143"},{"ruleId":"136","severity":1,"message":"144","line":197,"column":6,"nodeType":"138","endLine":197,"endColumn":8,"suggestions":"145"},{"ruleId":"136","severity":1,"message":"144","line":221,"column":6,"nodeType":"138","endLine":221,"endColumn":8,"suggestions":"146"},"no-native-reassign",["147"],"no-negated-in-lhs",["148"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'handleMute' and 'user.id'. Either include them or remove the dependency array.","ArrayExpression",["149"],"React Hook useEffect has missing dependencies: 'addNewClient', 'roomId', and 'user'. Either include them or remove the dependency array.",["150"],"React Hook useEffect has missing dependencies: 'addNewClient' and 'user.name'. Either include them or remove the dependency array.",["151"],"React Hook useEffect has a missing dependency: 'setClients'. Either include it or remove the dependency array.",["152"],["153"],"no-global-assign","no-unsafe-negation",{"desc":"154","fix":"155"},{"desc":"156","fix":"157"},{"desc":"158","fix":"159"},{"desc":"160","fix":"161"},{"desc":"160","fix":"162"},"Update the dependencies array to be: [handleMute, isMute, user.id]",{"range":"163","text":"164"},"Update the dependencies array to be: [addNewClient, roomId, user]",{"range":"165","text":"166"},"Update the dependencies array to be: [addNewClient, user.name]",{"range":"167","text":"168"},"Update the dependencies array to be: [setClients]",{"range":"169","text":"170"},{"range":"171","text":"170"},[845,853],"[handleMute, isMute, user.id]",[1882,1884],"[addNewClient, roomId, user]",[4030,4032],"[addNewClient, user.name]",[5786,5788],"[setClients]",[6497,6499]]